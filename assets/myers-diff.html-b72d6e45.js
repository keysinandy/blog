const e=JSON.parse(`{"key":"v-6689d030","path":"/articles/algorithm/myers-diff.html","title":"Myer's Diff算法解析","lang":"zh-CN","frontmatter":{"title":"Myer's Diff算法解析","cover":"https://pic2.imgdb.cn/item/64491af50d2dde5777207205.jpg","icon":"page","order":1,"author":"积木","date":"2023-04-25T00:00:00.000Z","tag":["算法"],"sticky":true,"description":"Git Diff 算法解析 背景 在日常编码时，大家都会使用版本控制系统，比如说Git。我们在提交代码的时候会看这次提交的修改内容，在合并代码时会看两个分支的不同。这种两份代码进行对比的情况我们称之为diff。diff是Git版本控制的核心。 diff的目的是比较两份代码的不同，这里的不同可以分为增与删。举个例子，在我们查看一个commit的时候，我们会关注一个代码块的删除、一个表达式的删除、一个函数的新增，而不太会关注那些没有改变的代码。因此，diff最重要的是展示删除、增加的部分。","head":[["meta",{"property":"og:url","content":"https://github.com/keysinandy/blog/articles/algorithm/myers-diff.html"}],["meta",{"property":"og:site_name","content":"学习笔记"}],["meta",{"property":"og:title","content":"Myer's Diff算法解析"}],["meta",{"property":"og:description","content":"Git Diff 算法解析 背景 在日常编码时，大家都会使用版本控制系统，比如说Git。我们在提交代码的时候会看这次提交的修改内容，在合并代码时会看两个分支的不同。这种两份代码进行对比的情况我们称之为diff。diff是Git版本控制的核心。 diff的目的是比较两份代码的不同，这里的不同可以分为增与删。举个例子，在我们查看一个commit的时候，我们会关注一个代码块的删除、一个表达式的删除、一个函数的新增，而不太会关注那些没有改变的代码。因此，diff最重要的是展示删除、增加的部分。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://pic2.imgdb.cn/item/64491af50d2dde5777207205.jpg"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-06T12:08:17.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Myer's Diff算法解析"}],["meta",{"property":"article:author","content":"积木"}],["meta",{"property":"article:tag","content":"算法"}],["meta",{"property":"article:published_time","content":"2023-04-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-06T12:08:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Myer's Diff算法解析\\",\\"image\\":[\\"https://pic2.imgdb.cn/item/64491af50d2dde5777207205.jpg\\"],\\"datePublished\\":\\"2023-04-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-05-06T12:08:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"积木\\"}]}"]]},"headers":[{"level":3,"title":"Git Diff 算法解析","slug":"git-diff-算法解析","link":"#git-diff-算法解析","children":[]},{"level":3,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":3,"title":"diff的几个要素","slug":"diff的几个要素","link":"#diff的几个要素","children":[]},{"level":3,"title":"图","slug":"图","link":"#图","children":[]},{"level":3,"title":"算法","slug":"算法","link":"#算法","children":[]}],"git":{"createdTime":1682595886000,"updatedTime":1683374897000,"contributors":[{"name":"keysin","email":"keysinandy@outlook.com","commits":2}]},"readingTime":{"minutes":11.35,"words":3404},"filePathRelative":"articles/algorithm/myers-diff.md","localizedDate":"2023年4月25日","excerpt":"<h3> Git Diff 算法解析</h3>\\n<h3> 背景</h3>\\n<p>在日常编码时，大家都会使用版本控制系统，比如说<code>Git</code>。我们在提交代码的时候会看这次提交的修改内容，在合并代码时会看两个分支的不同。这种两份代码进行对比的情况我们称之为<code>diff</code>。<code>diff</code>是<code>Git</code>版本控制的核心。</p>\\n<p><code>diff</code>的目的是比较两份代码的不同，这里的不同可以分为增与删。举个例子，在我们查看一个<code>commit</code>的时候，我们会关注一个代码块的删除、一个表达式的删除、一个函数的新增，而不太会关注那些没有改变的代码。因此，<code>diff</code>最重要的是展示删除、增加的部分。</p>","autoDesc":true}`);export{e as data};
